.CODE
0x00400000  0x0810000c  j 0x00400030          7            j MyMain
0x00400004  0x08100003  j 0x0040000c          13           j CPU_to_UART
0x00400008  0x08100008  j 0x00400020          14           j UART_to_CPU
0x0040000c  0x27bdfff8  addiu $29,$29,-8      20   	addiu $sp, $sp, -8 # Aloca espaço na pilha
0x00400010  0xafa80000  sw $8,0($29)          21           sw $t0, 0($sp) # Salva o conteúdo do registrador na pilha
0x00400014  0xafa90004  sw $9,4($29)          22           sw $t1, 4($sp) # Salva o conteúdo do registrador na pilha
0x00400018  0x26100001  addiu $16,$16,1       23   	addiu $s0, $s0, 1     # Incrementa o ponteiro de mensagemTransmitida
0x0040001c  0x42000018  eret                  24   	eret # Fim da rotina de tratamento de interrupção
0x00400020  0x92540008  lbu $20,8($18)        28   	lbu $s4, 8($s2)        # Lê o caractere escrito na UART A e passa para o registrador $s4
0x00400024  0xa2340000  sb $20,0($17)         29   	sb $s4, 0($s1)        # Armazena caractere no mensagemRecebida
0x00400028  0x26310001  addiu $17,$17,1       30   	addiu $s1, $s1, 1     # Incrementa ponteiro de mensagemRecebida
0x0040002c  0x42000018  eret                  31   	eret # Fim da rotina de tratamento de interrupção
0x00400030  0x3c011001  lui $1,4097           37   	la $s0, mensagemTransmitida  # $s0 é o ponteiro de mensagemTransmitida
0x00400034  0x34300000  ori $16,$1,0               
0x00400038  0x3c011001  lui $1,4097           38   	la $s1, mensagemRecebida     # $s1 é o ponteiro de mensagemRecebida
0x0040003c  0x34310014  ori $17,$1,20              
0x00400040  0x24080001  addiu $8,$0,1         39           li $t0, 1 # Carrega valor qualquer no registrador
0x00400044  0x24090002  addiu $9,$0,2         40           li $t1, 2 # Carrega valor qualquer no registrador
0x00400048  0x24140001  addiu $20,$0,1        41           li $s4, 1 # Carrega valor qualquer no registrador
0x0040004c  0x3c011001  lui $1,4097           42   	la $s2, EnderecoUART # Carrega o endereço da UART na memória no registrador
0x00400050  0x34320028  ori $18,$1,40              
0x00400054  0x8e520000  lw $18,0($18)         43   	lw $s2, 0($s2) # Carrega o endereço da UART no registrador
0x00400058  0x12800003  beq $20,$0,3          46   	beq $s4, $zero, SaltoMyMain # Caso o caractére lido seja igual a 0 (fim da frase), desvia para o envio da mensagem de sisB para sisA
0x0040005c  0x00000000  nop                   47   	nop
0x00400060  0x08100016  j 0x00400058          48   	j AguardaRecepcao
0x00400064  0x92130000  lbu $19,0($16)        51   	lbu $s3, 0($s0)  # Carrega a letra da mensagem em $s3
0x00400068  0x12600007  beq $19,$0,7          52          	beq $s3, $zero, Fim # Caso o caractére lido seja igual a 0 (fim da frase), desvia para o fim do programa
0x0040006c  0xa2530004  sb $19,4($18)         53          	sb $s3, 4($s2)  # Armazena a letra na UART B
0x00400070  0x00000000  nop                   54           nop
0x00400074  0x8fa90004  lw $9,4($29)          55           lw $t1, 4($sp) # Recupera o valor de $t1 salvo na pilha
0x00400078  0x8fa80000  lw $8,0($29)          56          	lw $t0, 0($sp) # Recupera o valor de $t2 salvo na pilha
0x0040007c  0x27bd0008  addiu $29,$29,8       57           addiu $sp, $sp, 8 # Libera o espaço anteriormente armazenado na pilha
0x00400080  0x08100019  j 0x00400064          58           j SaltoMyMain
0x00400084  0x08100021  j 0x00400084          61   	j Fim
0x00400088  0x00000000  nop                   62   	nop
0x0040008c  0x00000000  nop                   63   	nop
.DATA
0x10010000    0x74736554 0x6f632065 0x6572706d 0x69646e65 0x00216f64 0x20202020 0x20202020 0x20202020 
0x10010020    0x20202020 0x00000020 0xffe00000 0x00000000 0x00000000 0x00000000 0x00000000 0x00000000